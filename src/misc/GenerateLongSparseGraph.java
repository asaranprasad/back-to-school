package misc;

import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.Random;

public class GenerateLongSparseGraph {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		int[] ids = { 10135, 10136, 10140, 10141, 10146, 10155, 10157, 10158, 10165, 10170, 10185, 10208, 10257, 10268,
				10279, 10299, 10333, 10361, 10372, 10397, 10408, 10423, 10431, 10434, 10466, 10469, 10529, 10551, 10558,
				10561, 10577, 10581, 10599, 10620, 10627, 10631, 10666, 10676, 10685, 10693, 10713, 10721, 10728, 10731,
				10732, 10739, 10747, 10754, 10779, 10781, 10785, 10792, 10800, 10821, 10849, 10868, 10874, 10918, 10926,
				10967, 10980, 10990, 10994, 11003, 11013, 11027, 11042, 11049, 11057, 11066, 11067, 11076, 11092, 11097,
				11109, 11111, 11122, 11140, 11146, 11150, 11193, 11203, 11233, 11252, 11259, 11267, 11274, 11278, 11292,
				11298, 11308, 11337, 11413, 11415, 11423, 11433, 11447, 11468, 11471, 11481, 11503, 11525, 11537, 11540,
				11577, 11587, 11603, 11612, 11617, 11618, 11624, 11630, 11637, 11638, 11641, 11648, 11695, 11697, 11721,
				11775, 11778, 11823, 11865, 11867, 11884, 11898, 11905, 11921, 11953, 11973, 11977, 11980, 11982, 11986,
				11995, 11996, 12003, 12007, 12012, 12016, 12094, 12119, 12124, 12129, 12156, 12173, 12177, 12191, 12197,
				12206, 12217, 12223, 12244, 12255, 12264, 12265, 12266, 12278, 12280, 12323, 12335, 12339, 12343, 12389,
				12391, 12397, 12402, 12441, 12448, 12451, 12478, 12511, 12519, 12523, 12544, 12758, 12819, 12884, 12888,
				12889, 12891, 12892, 12896, 12898, 12899, 12902, 12915, 12917, 12945, 12951, 12953, 12954, 12982, 12992,
				13029, 13061, 13076, 13121, 13127, 13139, 13158, 13184, 13198, 13204, 13230, 13232, 13241, 13244, 13256,
				13264, 13277, 13290, 13296, 13303, 13342, 13344, 13360, 13367, 13377, 13388, 13422, 13433, 13459, 13476,
				13485, 13486, 13487, 13495, 13502, 13577, 13795, 13796, 13829, 13830, 13832, 13851, 13871, 13873, 13891,
				13930, 13931, 13933, 13964, 13970, 13983, 14006, 14025, 14027, 14057, 14082, 14098, 14100, 14107, 14108,
				14109, 14112, 14113, 14122, 14150, 14193, 14222, 14237, 14252, 14254, 14256, 14259, 14262, 14288, 14307,
				14314, 14321, 14457, 14487, 14489, 14492, 14512, 14520, 14524, 14543, 14570, 14574, 14576, 14588, 14633,
				14635, 14674, 14679, 14683, 14685, 14689, 14696, 14698, 14709, 14711, 14716, 14730, 14747, 14761, 14771,
				14783, 14794, 14802, 14814, 14828, 14831, 14842, 14843, 14869, 14877, 14893, 14905, 14908, 14952, 14955,
				14960, 14986, 15008, 15016, 15023, 15024, 15027, 15041, 15048, 15070, 15074, 15096, 15249, 15295, 15304,
				15323, 15356, 15370, 15376, 15380, 15389, 15401, 15411, 15412, 15454, 15582, 15607, 15624, 15841, 15919,
				15991, 16218 };

		PrintWriter pw = new PrintWriter(
				new FileWriter("C:\\Coursework\\Parallel Data Processing\\Project\\flightsData\\generated.csv"));

		for (int iter = 0; iter < 5; iter++) {
			Queue<Integer> q = new LinkedList<>();
			// store last 100
			for (int i : ids) {
				q.add(i);
			}

			for (int i = 20000; i < 36000; i++) {
				List<Integer> fromList = new LinkedList<>(q);
				Random rand = new Random();
				int from = fromList.get(rand.nextInt(q.size() - 1));
				int to = i;
				int timeDur = rand.nextInt(100) + 150;

				pw.write(from + "," + to + "," + timeDur + "\n");
				pw.write(to + "," + from + "," + timeDur + "\n");

				q.add(i);
				if (q.size() > 1000)
					q.poll();
			}
		}
		pw.close();
	}

}
